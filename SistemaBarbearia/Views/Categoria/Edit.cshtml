@model SistemaBarbearia.ViewModels.Categorias.CategoriaVM


<form class="form-horizontal">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container">
            <div><h4>Alterar Categoria</h4></div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-8">
                    @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control col-sm-1", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger", disabled = "disabled" })
                </div>
                <div class="col-md-12">
                    @Html.LabelFor(model => model.dsCategoria, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.dsCategoria, new { htmlAttributes = new { @class = "form-control col-md-8", @style = "text-transform:uppercase ", @placeholder = "Categoria", @pattern = "[0-9]+$" } })
                    @Html.ValidationMessageFor(model => model.dsCategoria, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dtCadastro, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.dtCadastro, new { htmlAttributes = new { @class = "form-control col-md-6", @style = "text-transform:uppercase", @placeholder = "Data - Cadastro", @disabled = "disabled", } })
                        @Html.ValidationMessageFor(model => model.dtCadastro, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dtUltAlteracao, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.dtUltAlteracao, new { htmlAttributes = new { @class = "form-control col-md-6", @style = "text-transform:uppercase", @placeholder = "Data Ult. Alteração", @disabled = "disabled", } })
                        @Html.ValidationMessageFor(model => model.dtUltAlteracao, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <fieldset>
                <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                    <input type="submit" value="Salvar" class="btn btn-primary" />
                    @Html.ActionLink("Voltar", "Index", routeValues: null, htmlAttributes: new { @class = "btn btn-danger me-md-2", @role = "button" })
                </div>
            </fieldset>
        </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</form>