@model SistemaBarbearia.ViewModels.CondPagamentos.CondPagamentoVM
@using SistemaBarbearia.Helper;
@{

    var action = Convert.ToString(ViewBag.Action);
    bool readOnly = Convert.ToBoolean(ViewBag.ReadOnly);
    bool isEdit = action.ToLower() == "edit";


}
@if (action != "create")
{
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @using (Html.BeginForm())
                {
                    @Html.LabelFor(model => model.IdModelPai, new { @class = "control-label required" })
                    @Html.TextBoxFor(model => model.IdModelPai, new { @class = "form-control col-md-2", readOnly = "readonly" })
                }
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-md-8">
        <div class="form-group">
            @Html.LabelFor(model => model.dsCondPag, htmlAttributes: new { @class = "control-label required" })
            @Html.TextBoxFor(model => model.dsCondPag, new { @class = "form-control col-md-10", maxlength = "50", @style = "text-transform:uppercase ", @autofocus = "autofocus", @placeholder = "Condição Pagamento" })
            @Html.ValidationMessageFor(model => model.dsCondPag, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-3">
        @Html.LabelFor(model => model.txJuro, htmlAttributes: new { @class = "control-label required" })
        <div class="input-group-append">
            @Html.TextBoxFor(model => model.txJuro, new { @class = "form-control col-md-4 text-right", maxlength = "50", @autofocus = "autofocus", @placeholder = "Juro" })
            @Html.ValidationMessageFor(model => model.txJuro, "", new { @class = "text-danger" })
            <span class="input-group-text">%</span>
        </div>
    </div>
    <div class="col-md-4">
        @Html.LabelFor(model => model.txMulta, htmlAttributes: new { @class = "control-label required" })
        <div class="input-group-append">
            @Html.TextBoxFor(model => model.txMulta, new { @class = "form-control col-md-4 text-right", maxlength = "50", @autofocus = "autofocus", @placeholder = "Multa" })
            @Html.ValidationMessageFor(model => model.txMulta, "", new { @class = "text-danger" })
            <span class="input-group-text">%</span>
        </div>
    </div>
    <div class="col-md-4">
        @Html.LabelFor(model => model.txDesconto, htmlAttributes: new { @class = "control-label required" })
        <div class="input-group-append">
            @Html.TextBoxFor(model => model.txDesconto, new { @class = "form-control col-md-4 text-right", maxlength = "50", @autofocus = "autofocus", @placeholder = "Desconto" })
            @Html.ValidationMessageFor(model => model.txDesconto, "", new { @class = "text-danger" })
            <span class="input-group-text">%</span>
        </div>
    </div>
</div>
<div class="bs-callout bs-callout-default">
    <h4 class="heading no-margin">Pagamentos</h4>
    <div class="row">
        <div class="col-lg-6">
            <div class="form-group">
                @Html.EditorFor(model => model.formaPagamento, "formaPagamentos/Select", new { @Required = true, Disable = readOnly })
            </div>
        </div>
        <div class="col-lg-2">
            <div class="form-group">
                @Html.LabelFor(model => model.qtdDias, new { @class = "form-control-label required " })
                @Html.TextBoxFor(model => model.qtdDias, new { @class = "form-control col-md-10 text-right", maxlength = "100", @autofocus = "autofocus" })
                @Html.ValidationMessageFor(model => model.qtdDias, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-2">
            <div class="form-group">
                @Html.LabelFor(model => model.txPercentual, new { @class = "form-control-label required text-right" })
                @Html.TextBoxFor(model => model.txPercentual, new { @class = "form-control col-md-10 text-right", maxlength = "100", @autofocus = "autofocus" })
                @Html.ValidationMessageFor(model => model.txPercentual, null, new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-lg-2">
            <div class="form-group">
                @Html.HiddenFor(model => model.txPercentualTotalAux)
                @Html.LabelFor(model => model.txPercentualTotal, new { @class = "no-required" })
                @Html.TextBoxFor(model => model.txPercentualTotal, new { @class = "form-control money", disabled = false, style = "text-align: right" })
                @Html.ValidationMessageFor(model => model.txPercentualTotal, null, new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-3">
            <div class="form-group">             
                <button id="addItem" type="button" class="btn btn-success"><i class="fa fa-plus"></i> Adicionar</button>
            </div>
        </div>
    </div>


    <div class="table-wrapper">
        @Html.HiddenFor(model => model.jsItens)
        @using (Html.BeginFormContainer(model => model.jsItens))
        {
            <table id="tblItens" class=" table display responsive nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th class="note-icon-orderedlist" style="width:50px"></th>
                        <th class="wd-10p">Nº Parcela</th>
                        <th class="wd-10p">Dias</th>
                        <th class="wd-10p">Percentual</th>
                        <th class="wd-70p">Forma de  Pagamento</th>
                    </tr>
                </thead>
            </table>
            @Html.ValidationMessageFor(model => model.jsItens, null, new { @class = "help-block no-required" })
        }
    </div>
</div>
