
@*@model SistemaBarbearia.Models.Paises
@using SistemaBarbearia.Views.Shared.SharedTemplate.Util;
@{
    bool Disabled = Convert.ToBoolean(ViewData["Disabled"]);
    bool Required = Convert.ToBoolean(ViewData["Required"] ?? true);
    bool OnlySelect = Convert.ToBoolean(ViewData["onlySelect"] ?? true);
    bool LabelVertical = Convert.ToBoolean(ViewData["LabelVertical"]);
    string Label = Convert.ToString(ViewData["Label"] ?? "País");
    string classLabel = Convert.ToString(ViewData["classLabel"] ?? Helper.Label);
    string classForm = Convert.ToString(ViewData["classForm"] ?? Helper.InputLG);
    var Prefix = Html.ClientPrefixName().ToString(); ;
}
@Html.HiddenFor(u => u.text)
@if (Disabled)
{
    using (Html.BeginForm(Prefix + ".id"))
    {
        if (!LabelVertical)
        {
            @Html.LabelFor(e => e.text, Label, new { @class = classLabel, @id = @Helper.getInputId("lbl", Prefix.ToString()) })
        }
        <div class="@classForm">
            @if (LabelVertical)
            {
                @Html.LabelFor(e => e.text, Label, new { @class = "control-label ", @id = @Helper.getInputId("lbl", Prefix.ToString()) })
            }

            <h3 class="label label-default label-td" style="text-align: left;padding: 10px; margin:0px">
                <i class="fa fa-sticky-note"></i>  @(Model == null ? "" : Model.text)
            </h3>
            @Html.HiddenFor(model => model.idPais)
            @Html.HiddenFor(model => model.text)
        </div>
    }
}
else
{
    using (Html.BeginForm(Prefix + ".id"))
    {
        if (!LabelVertical)
        {
            @Html.LabelFor(e => e.nmPais, Label, new { @class = classLabel })
        }
        <div class="@classForm">
            @if (LabelVertical)
            {
                @Html.LabelFor(e => e.text, Label, new { @class = "control-label" })
            }
            @if (OnlySelect)
            {
                <div class="form-inline">
                    @Html.DropDownList("select", new List<SelectListItem>(), new { @class = "form-control" })
                    <div class="btn-primary">
                        <button type="button" data-target="#@Helper.getInputId("Modal", Prefix)" id="@Helper.getInputId("btn-localizar", Prefix)" title="Abrir a busca de @Label" class="btn btn-default" data-toggle="modal"><i class="fa fa-search"></i></button>
                    </div>
                </div>
                @Html.HiddenFor(model => model.idPais)
                @Html.HiddenFor(model => model.text)
            }
            else
            {
                <div class="input-group">
                    <div class="input-group-btn" style="width:25%">
                        @Html.TextBoxFor(model => model.idPais, new { @style = "border-radius: 4px 0px 0px 4px;", @class = "form-control", @autocomplete = "off", @filter = "numeric" })
                    </div>
                    <div class="input-group-btn">
                        <a style="border-radius:0" data-target="#@Helper.getInputId("Modal", Prefix)" href="#@Helper.getInputId("Modal", Prefix)" id="@Helper.getInputId("btn-localizar", Prefix)" title="Abrir a busca de @Label" class="btn btn-default" data-toggle="modal"><i class="fa fa-search"></i></a>
                    </div>
                    @Html.HiddenFor(model => model.text)
                    @Html.DropDownList("select", new List<SelectListItem>(), new { @class = "form-control" })
                </div>
            }
            @Html.ValidationMessageFor(model => model.idPais, null, new { @class = "help-block" })
        </div>
    }
    @Html.AddScriptBlock(
        @<script type="text/javascript">
        $(function () {
            shared_function["@Prefix"] = new sSelect({
                prefix: "@Prefix",
                query: {
                    url: '@Url.Action("JsQuery", "Pais")',
                    order: [[2, "asc"]],
                    columns: [
                        { data: "id", sortable: true, width: "20%", label: "ID" },
                        { data: "text", sortable: true, width: "8000%", label: "Nome" },
                    ],
                },
                select: {
                    url: '@Url.Action("JsSelect", "Pais")',
                },
                details:{
                    url: '@Url.Action("JsDetails", "Pais")',
                },
                placeholder: "Buscar @Label".toLowerCase(),
                elements: {
                    $id: $('#@Html.ClientIdFor(e => e.idPais)'),
                    text: $('#@Html.ClientIdFor(e => e.text)'),
                },
                templateResult: function (data) {
                    if (data.loading) return data.nmPais;
                    return '<div class="row no-margin">' +
                        '<div class="col-lg-2  col-md-2  col-sm-3 col-xs-3">' + data.id + '</div>' +
                        '<div class="col-lg-10 col-md-10 col-sm-9 col-xs-9">' + data.text + '</div>' +
                        '</div>';
                },
                templateHeader: '<div class="row no-margin select2-header">' +
                '<div class="col-lg-2  col-md-2  col-sm-3 col-xs-3">Id</div>' +
                '<div class="col-lg-10 col-md-10 col-sm-9 col-xs-9">Nome</div>' +
                '</div>'
            });
           shared_function["@Prefix"].init();
        });

        </script>
)
}*@